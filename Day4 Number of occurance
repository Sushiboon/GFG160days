//{ Driver Code Starts
// Initial function template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int findFirst(const vector<int>& arr, int target)
    {

        // code here
        
            int left = 0,  right = arr.size() - 1; 
            int result = -1; 
            while (left <= right) 
            { 
                int mid = left + (right - left) / 2; 
                if (arr[mid] == target) 
                { 
                    result = mid; right = mid - 1; // Move left to find the first occurrence 
                    } 
                    else if (arr[mid] < target) 
                    { 
                        left = mid + 1; 
                        
                    } 
                        else 
                        { right = mid - 1; 
                            
                        } 
                
            } 
            return result; 
        
    }
            
         // Function to find the last occurrence of target using binary search 
            int findLast(const vector<int>& arr, int target) 
            {
                int left = 0, right = arr.size() - 1; 
                int result = -1; 
                while (left <= right) 
                { 
                    int mid = left + (right - left) / 2; 
                    if (arr[mid] == target) 
                    { 
                        result = mid; left = mid + 1; // Move right to find the last occurrence 
                    } 
                        else if (arr[mid] < target) 
                        { 
                            left = mid + 1; 
                            
                        } else 
                        { 
                            right = mid - 1; 
                            
                        } 
                    
                }
                return result;
            } // Function to count occurrences of target 
                     int countFreq(vector<int>& arr, int target) 
                     { 
                    int first = findFirst(arr, target); 
                    if (first == -1) 
                    { 
                        return 0; // Target not found 
                        } 
                        int last = findLast(arr, target); 
        return last - first + 1; 
                    
                     }
                     
    };


//{ Driver Code Starts.

int main() {
    int test_case;
    cin >> test_case;
    cin.ignore();
    while (test_case--) {

        int d;
        vector<int> arr, brr, crr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        getline(cin, input);
        ss.clear();
        ss.str(input);
        while (ss >> number) {
            crr.push_back(number);
        }
        d = crr[0];
        int n = arr.size();
        Solution ob;
        int ans = ob.countFreq(arr, d);
        cout << ans << endl;

        cout << "~"
             << "\n";
    }
    return 0;
}
// } Driver Code Ends
