//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution {
  public:
    int kthElement(vector<int>& a, vector<int>& b, int k) { 
        int m = a.size(); 
        int n = b.size(); 
        if (k > m + n) 
        return -1; // k is out of range 
        int left = max(0, k - n), right = min(k, m); 
        while (left < right) 
        { 
            int midA = left + (right - left) / 2; 
            int midB = k - midA; 
            if (midA > 0 && a[midA - 1] > b[midB]) 
            { 
                right = midA - 1; 
                
            } 
            else if (midB > 0 && b[midB - 1] > a[midA])
            { 
                left = midA + 1;
                }
                else { 
                    left = midA; 
            break; 
                    
                }
            } 
            int aMid = left;
            int bMid = k - left; 
            int aLeftMax = aMid == 0 ? INT_MIN : a[aMid - 1]; 
            int bLeftMax = bMid == 0 ? INT_MIN : b[bMid - 1];
            return max(aLeftMax, bLeftMax); 
        
    }
        // code here
    };

//{ Driver Code Starts.

// Driver code
int main() {
    int t;
    cin >> t;
    cin.ignore();
    while (t--) {
        int n, m, k;
        cin >> k;
        cin.ignore();
        string input;
        int num;
        vector<int> a, b;

        getline(cin, input);
        stringstream s2(input);
        while (s2 >> num) {
            a.push_back(num);
        }

        getline(cin, input);
        stringstream s3(input);
        while (s3 >> num) {
            b.push_back(num);
        }

        Solution ob;
        cout << ob.kthElement(a, b, k) << endl << "~\n";
    }
    return 0;
}
// } Driver Code Ends
